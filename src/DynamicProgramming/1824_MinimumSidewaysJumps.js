/*
There is a 3 lane road of length n that consists of n + 1 points labeled from 0 to n. A frog starts at point 0 in the second lane and wants to jump to point n. However, there could be obstacles along the way.

You are given an array obstacles of length n + 1 where each obstacles[i] (ranging from 0 to 3) describes an obstacle on the lane obstacles[i] at point i. If obstacles[i] == 0, there are no obstacles at point i. There will be at most one obstacle in the 3 lanes at each point.

For example, if obstacles[2] == 1, then there is an obstacle on lane 1 at point 2.
The frog can only travel from point i to point i + 1 on the same lane if there is not an obstacle on the lane at point i + 1. To avoid obstacles, the frog can also perform a side jump to jump to another lane (even if they are not adjacent) at the same point if there is no obstacle on the new lane.

For example, the frog can jump from lane 3 at point 3 to lane 1 at point 3.
Return the minimum number of side jumps the frog needs to reach any lane at point n starting from lane 2 at point 0.

Note: There will be no obstacles on points 0 and n.

 

Example 1:


Input: obstacles = [0,1,2,3,0]
Output: 2 
Explanation: The optimal solution is shown by the arrows above. There are 2 side jumps (red arrows).
Note that the frog can jump over obstacles only when making side jumps (as shown at point 2).
Example 2:


Input: obstacles = [0,1,1,3,3,0]
Output: 0
Explanation: There are no obstacles on lane 2. No side jumps are required.
Example 3:


Input: obstacles = [0,2,1,0,3,0]
Output: 2
Explanation: The optimal solution is shown by the arrows above. There are 2 side jumps.
 

Constraints:

obstacles.length == n + 1
1 <= n <= 5 * 105
0 <= obstacles[i] <= 3
obstacles[0] == obstacles[n] == 0

POST: https://leetcode.com/problems/minimum-sideway-jumps/discuss/1153722/JavaScript-DP
*/

var minSideJumps = function (obstacles) {
  const MAX = 10 ** 6;
  let current = [MAX, 0, MAX];
  let next = [0, 0, 0];
  let lastLaneBlocked = -1;

  for (let i = 1; i < obstacles.length; i += 1) {
    const laneBlocked = obstacles[i] - 1;
    for (let currentLane = 0; currentLane < 3; currentLane += 1) {
      next[currentLane] = MAX;
      if (laneBlocked === currentLane) continue;

      for (let previousLane = 0; previousLane < 3; previousLane += 1) {
        const jumpCost = currentLane === previousLane ? 0 : 1;
        const extraJump = lastLaneBlocked === currentLane && laneBlocked === previousLane ? 1 : 0;
        next[currentLane] = Math.min(
          next[currentLane],
          current[previousLane] + jumpCost + extraJump
        );
      }
    }

    lastLaneBlocked = laneBlocked;
    [current, next] = [next, current];
  }

  return Math.min(...current);
};


// const maxLen: number = 100;

// for (let i = 0; i < 50; i += 1) {
//   const len = numberBetween(1, maxLen);

//   const obstacles = new Array(len).fill(0).map(() => numberBetween(0,3));
//   obstacles[0] = 0;
//   obstacles[len - 1] = 0;

//   // logOutList('"' + words.trimEnd() + '"')
//   // logOutList(printRow([houses, costs, len, numColors, target]) + ',')
//   logOutList(printRow(obstacles) + ',');
//   // logOutList(printRow([jobs, k]) + ',');
//   // logOutLeetcode([s, t])
// }


const tests = [
  [0,1,3,0],
  [0, 2, 1, 0, 3, 0],
  [0, 1, 2, 3, 0],
  [0, 2, 3, 2, 0, 2, 2, 0, 0, 1, 2, 3, 3, 0, 3, 0, 1, 2, 2, 0, 3, 2, 2, 2, 2, 3, 2, 2, 1, 2, 1, 1, 2, 3, 1, 1, 2, 3, 2, 0, 2, 1, 2, 3, 1, 0, 0, 1, 2, 1, 3, 3, 0, 0],
  [0, 0, 1, 1, 1, 0, 0, 1, 3, 3, 3, 2, 2, 1, 2, 0],
  [0, 0, 3, 1, 3, 0, 2, 0, 2, 3, 3, 3, 2, 0, 1, 2, 2, 3, 1, 0, 3, 0, 3, 2, 2, 3, 0, 0, 0, 2, 1, 3, 1, 3, 1, 3, 3, 0, 2, 2, 3, 2, 3, 2, 0, 1, 0, 2, 2, 0, 2, 2, 1, 2, 0, 1, 1, 1, 2, 1, 1, 0, 2, 3, 0, 3, 2, 2, 1, 0, 1, 3, 1, 3, 1, 1, 3, 0, 0, 0, 2, 2, 1, 0, 2, 2, 3, 0, 1, 2, 0, 1, 1, 1, 0, 0, 3, 2, 3, 0],
  [0, 1, 0, 1, 1, 1, 1, 3, 2, 3, 0, 1, 2, 2, 2, 2, 0, 1, 3, 0, 3, 2, 1, 3, 0, 2, 0, 2, 0, 1, 1, 2, 0, 3, 2, 0],
  [0, 1, 0, 3, 3, 2, 0, 2, 0, 0, 0, 0, 1, 3, 3, 2, 0, 3, 3, 1, 2, 2, 1, 3, 0, 2, 0, 3, 1, 1, 3, 3, 3, 3, 0, 3, 3, 1, 3, 1, 2, 1, 2, 3, 3, 0, 1, 0, 2, 3, 1, 3, 0, 1, 2, 2, 0, 3, 3, 1, 3, 0, 0],
  [0, 1, 1, 0, 3, 2, 3, 0, 0, 1, 2, 0, 1, 0, 2, 2, 1, 1, 2, 3, 1, 3, 3, 2, 2, 3, 2, 3, 2, 0, 0, 0, 1, 3, 2, 0],
  [0, 0, 0, 3, 3, 1, 2, 3, 0, 2, 1, 0, 1, 1, 0, 2, 1, 2, 0, 2, 3, 3, 1, 2, 3, 1, 0, 0, 0, 0, 3, 0, 3, 1, 1, 2, 3, 0, 3, 0, 0, 2, 2, 0, 0, 1, 0, 0, 1, 2, 1, 3, 3, 2, 3, 1, 1, 0],
  [0, 3, 1, 1, 1, 3, 1, 2, 3, 0, 3, 3, 1, 3, 1, 3, 1, 0, 3, 3, 2, 1, 2, 0, 1, 2, 3, 1, 0, 0, 2, 1, 3, 3, 2, 0, 2, 3, 2, 2, 3, 0, 0, 0, 3, 0, 0, 1, 1, 2, 2, 0, 1, 0, 3, 0, 2, 0],
  [0, 2, 2, 1, 1, 1, 0, 0, 2, 2, 0, 2, 1, 1, 0],
  [0, 1, 2, 3, 0, 1, 2, 0, 1, 3, 3, 3, 0, 2, 1, 0, 1, 2, 3, 1, 1, 0, 1, 3, 0, 1, 1, 3, 2, 0, 3, 2, 3, 1, 2, 0],
  [0, 2, 3, 3, 0, 1, 2, 1, 3, 0, 0, 3, 0, 0, 1, 1, 1, 3, 2, 3, 1, 0, 0, 1, 2, 0, 1, 3, 0, 0, 0, 1, 0],
  [0, 3, 0, 3, 0, 0, 1, 2, 2, 0, 1, 0, 1, 0, 1, 3, 1, 3, 2, 2, 3, 3, 2, 0, 1, 3, 3, 0],
  [0, 2, 3, 0, 3, 2, 1, 2, 2, 1, 0, 2, 0, 2, 1, 1, 0, 3, 3, 2, 1, 2, 1, 3, 2, 1, 0, 3, 0, 1, 0, 2, 1, 0, 1, 2, 0, 2, 1, 2, 2, 3, 1, 1, 2, 0],
  [0, 3, 0, 2, 1, 2, 3, 2, 2, 3, 2, 2, 3, 2, 2, 0, 0, 2, 3, 2, 1, 0, 0, 0, 0, 1, 0, 0, 3, 2, 0, 3, 1, 0, 1, 3, 1, 2, 3, 2, 1, 2, 3, 3, 0, 1, 0, 2, 2, 2, 3, 1, 3, 0, 1, 2, 1, 2, 1, 3, 0, 2, 3, 2, 3, 0, 2, 2, 2, 1, 2, 3, 0, 3, 3, 2, 1, 2, 2, 3, 1, 3, 1, 2, 1, 3, 3, 3, 1, 3, 2, 3, 3, 0, 1, 1, 2, 0],
  [0, 1, 0, 1, 3, 0, 3, 3, 0, 0, 1, 3, 1, 1, 0, 3, 3, 3, 1, 1, 2, 0, 2, 1, 1, 2, 3, 0, 3, 3, 1, 2, 2, 0, 3, 1, 2, 2, 0, 3, 2, 1, 3, 1, 2, 2, 1, 2, 0, 2, 0, 1, 1, 0, 0, 2, 2, 0, 3, 1, 3, 0, 1, 1, 2, 1, 0, 2, 2, 0, 1, 2, 3, 1, 1, 2, 1, 0, 0, 1, 0, 3, 2, 3, 3, 3, 2, 1, 1, 0, 2, 0],
  [0, 2, 2, 0],
  [0, 0, 0, 0, 0, 0, 2, 3, 1, 0, 3, 0, 0, 2, 3, 0, 0, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 0],
  [0, 3, 0, 1, 0],
  [0, 2, 2, 3, 1, 0, 1, 0, 1, 1, 3, 2, 0, 1, 0, 1, 0, 3, 2, 3, 1, 1, 1, 0, 0, 3, 2, 3, 0, 2, 3, 1, 3, 2, 3, 3, 0, 3, 2, 2, 2, 0, 2, 2, 1, 3, 3, 0, 2, 2, 1, 2, 1, 3, 2, 2, 0, 2, 0, 3, 2, 2, 3, 2, 3, 2, 3, 2, 3, 2, 0, 0, 0, 1, 0],
  [0, 3, 3, 0, 0, 1, 0, 3, 0, 0, 2, 2, 1, 1, 2, 3, 2, 1, 2, 2, 1, 2, 1, 3, 3, 3, 0, 1, 2, 2, 2, 3, 2, 0, 0, 3, 1, 3, 0, 3, 0, 3, 0, 3, 0, 0, 1, 0, 0, 1, 2, 0, 0, 3, 3, 1, 1, 1, 2, 0],
  [0, 1, 3, 2, 1, 2, 0],
  [0, 2, 3, 2, 2, 0, 3, 1, 1, 1, 2, 3, 3, 2, 0, 2, 1, 1, 3, 3, 0, 1, 0, 0, 0, 1, 2, 1, 0, 2, 2, 1, 2, 3, 1, 1, 1, 1, 3, 2, 2, 1, 2, 2, 1, 2, 0, 2, 0, 0, 3, 3, 3, 2, 2, 3, 2, 0, 0, 0, 0, 0, 1, 3, 3, 3, 2, 3, 1, 0, 3, 0, 2, 0, 0, 0, 2, 0, 0, 1, 0],
  [0, 3, 2, 3, 1, 0, 1, 0, 1, 0, 3, 3, 2, 1, 0, 3, 0, 3, 2, 3, 1, 3, 0, 0, 3, 3, 2, 3, 1, 2, 2, 3, 2, 3, 0, 0, 0, 3, 3, 2, 3, 1, 2, 1, 1, 3, 2, 0],
  [0, 0],
  [0, 2, 2, 3, 0, 2, 2, 2, 0, 2, 2, 2, 1, 1, 3, 3, 1, 1, 2, 1, 2, 1, 3, 1, 2, 2, 0, 3, 1, 3, 3, 3, 0, 0, 1, 3, 1, 2, 3, 0, 1, 1, 1, 1, 2, 3, 2, 0, 3, 0, 3, 0, 0, 3, 3, 2, 3, 3, 3, 2, 2, 0, 2, 3, 2, 1, 0, 3, 0, 1, 2, 2, 0, 2, 3, 3, 2, 1, 2, 3, 1, 2, 2, 0, 0, 2, 2, 1, 2, 3, 1, 0, 3, 2, 2, 0, 0, 1, 0],
  [0, 2, 3, 0, 0, 1, 0, 1, 1, 0, 2, 2, 3, 0, 1, 3, 1, 1, 1, 3, 2, 0, 2, 0, 1, 0, 2, 3, 0, 0, 0, 0, 0, 3, 0, 3, 1, 0, 2, 2, 1, 3, 3, 0, 1, 3, 0, 3, 2, 0, 3, 1, 0, 0, 2, 2, 2, 1, 3, 0, 0, 0],
  [0, 3, 2, 2, 0, 0, 3, 3, 0, 2, 2, 0, 0, 0, 1, 0, 3, 0, 3, 2, 3, 3, 2, 3, 3, 2, 2, 0, 0, 0, 2, 3, 0, 2, 1, 2, 2, 0, 2, 1, 0, 2, 2, 0, 0, 3, 0, 0, 3, 3, 2, 0, 3, 3, 0, 2, 0, 3, 1, 0, 2, 0, 2, 3, 2, 3, 2, 3, 0, 3, 0, 3, 2, 2, 1, 0, 2, 0, 1, 2, 0, 1, 0],
  [0, 0, 2, 3, 1, 0],
  [0, 2, 0, 3, 2, 3, 1, 0, 0, 3, 3, 3, 1, 2, 3, 3, 3, 0, 2, 3, 3, 1, 2, 1, 2, 0, 3, 2, 3, 0, 0, 0, 1, 3, 1, 3, 0, 0, 3, 1, 2, 3, 1, 3, 3, 0, 0, 1, 3, 0, 1, 1, 3, 3, 3, 0],
  [0, 3, 3, 0, 2, 0, 0, 1, 2, 0, 0, 1, 3, 2, 0, 2, 1, 1, 2, 3, 1, 0, 1, 3, 2, 3, 3, 3, 2, 3, 2, 2, 2, 1, 3, 1, 3, 1, 2, 0, 1, 3, 0, 2, 3, 1, 0, 0, 1, 3, 2, 3, 1, 0, 1, 3, 3, 2, 1, 2, 1, 2, 2, 1, 0, 2, 0, 1, 1, 0, 1, 0, 1, 3, 1, 0],
  [0, 3, 3, 2, 3, 1, 0, 1, 0, 0, 0, 1, 0, 0],
  [0, 0, 2, 2, 2, 2, 0, 1, 3, 1, 0, 0, 2, 1, 1, 0, 1, 3, 2, 2, 0, 3, 3, 1, 0],
  [0, 3, 1, 1, 0, 1, 3, 1, 2, 3, 3, 0, 1, 0, 0, 3, 2, 3, 0, 0, 0, 0, 1, 1, 3, 2, 1, 1, 2, 3, 1, 0, 2, 2, 1, 2, 0, 0, 3, 1, 2, 3, 0, 1, 0, 1, 1, 1, 3, 2, 3, 3, 3, 0, 2, 0, 0, 1, 2, 2, 1, 3, 3, 3, 0, 3, 1, 1, 0, 1, 3, 1, 0, 1, 0, 2, 3, 2, 3, 2, 2, 3, 1, 2, 0, 1, 0],
  [0, 2, 2, 1, 2, 0, 1, 0, 3, 3, 3, 1, 2, 2, 2, 1, 0, 1, 2, 0, 1, 1, 1, 1, 0, 3, 3, 1, 0, 3, 1, 1, 3, 0, 2, 0, 3, 3, 3, 0, 3, 3, 2, 3, 3, 1, 3, 3, 3, 0, 2, 3, 1, 2, 2, 3, 2, 0, 2, 2, 2, 0, 1, 2, 1, 0, 3, 0],
  [0, 3, 0, 3, 0, 3, 2, 0, 0, 0, 3, 1, 0, 1, 3, 3, 0, 0, 2, 1, 1, 2, 3, 3, 0, 1, 2, 0, 1, 3, 1, 0, 2, 0, 3, 3, 2, 3, 2, 0, 0, 1, 1, 3, 3, 1, 3, 2, 0, 3, 1, 1, 2, 2, 0],
  [0, 3, 0, 0, 0, 3, 2, 3, 0, 0, 3, 3, 0, 1, 1, 2, 1, 0, 2, 1, 3, 3, 1, 3, 1, 1, 1, 0, 0, 1, 3, 3, 1, 1, 3, 2, 1, 1, 3, 0, 0, 2, 1, 2, 3, 0, 3, 0, 1, 3, 1, 2, 0, 1, 1, 1, 2, 1, 2, 3, 0, 0, 1, 2, 3, 3, 0, 2, 2, 2, 0],
  [0, 1, 2, 3, 1, 0, 0, 2, 3, 2, 0, 1, 0, 0, 2, 2, 0, 2, 1, 2, 3, 0, 2, 2, 3, 1, 0, 2, 3, 0, 3, 2, 2, 1, 0, 1, 0, 2, 2, 2, 2, 3, 0, 0, 0, 3, 0, 3, 2, 1, 2, 0, 1, 2, 3, 2, 0, 1, 1, 2, 2, 3, 3, 2, 3, 0, 0, 1, 0, 2, 0, 1, 2, 3, 2, 2, 1, 3, 0, 2, 0, 2, 2, 0, 2, 3, 0, 0, 2, 1, 3, 0, 1, 3, 0, 2, 0],
  [0, 0, 1, 1, 2, 0, 3, 2, 3, 0, 2, 3, 3, 0, 1, 0, 0, 3, 2, 3, 2, 2, 2, 3, 0, 3, 0, 3, 2, 3, 0, 2, 0, 0, 1, 3, 3, 0, 1, 0, 0, 3, 2, 3, 2, 0, 0, 2, 3, 0, 3, 1, 3, 1, 0, 1, 3, 0, 0, 2, 0, 0, 2, 1, 1, 0, 3, 2, 2, 0, 0, 1, 0],
  [0, 3, 2, 0, 0, 3, 3, 2, 0, 1, 2, 3, 1, 2, 3, 2, 0],
  [0, 1, 2, 1, 0, 2, 1, 1, 3, 0, 2, 3, 0, 2, 0, 3, 2, 3, 0, 2, 3, 1, 2, 3, 0, 1, 1, 3, 3, 0, 0, 1, 1, 0, 3, 3, 0, 1, 3, 2, 0, 2, 3, 1, 2, 3, 2, 3, 3, 3, 0, 0, 2, 2, 2, 2, 3, 3, 0, 0, 2, 3, 1, 3, 2, 3, 0, 0],
  [0, 3, 0, 1, 0, 0, 2, 0, 3, 2, 3, 3, 2, 3, 0, 1, 3, 2, 1, 2, 1, 0, 2, 2, 2, 3, 3, 1, 2, 0, 3, 2, 2, 3, 3, 3, 0, 1, 1, 1, 2, 1, 1, 0, 3, 1, 2, 0, 3, 0, 1, 0, 0, 1, 2, 0, 1, 3, 1, 0, 2, 0, 0, 0, 1, 2, 2, 2, 2, 0, 0],
  [0, 0, 3, 1, 3, 1, 3, 2, 1, 3, 1, 3, 3, 2, 3, 2, 0, 0, 1, 2, 1, 2, 2, 2, 1, 3, 3, 3, 1, 3, 1, 2, 1, 2, 3, 0, 3, 3, 3, 1, 1, 3, 0, 2, 3, 3, 1, 2, 0, 2, 0],
  [0, 3, 0, 2, 0, 1, 2, 0, 1, 1, 2, 3, 0, 1, 1, 1, 2, 2, 0, 0, 0, 0, 3, 2, 1, 1, 0, 3, 1, 0, 0, 3, 0, 3, 3, 1, 0, 3, 0, 2, 2, 0, 2, 0, 0, 0, 3, 1, 0, 1, 3, 1, 0, 3, 2, 2, 2, 1, 0, 0, 0, 2, 1, 3, 1, 1, 3, 3, 1, 3, 3, 2, 2, 0, 1, 3, 3, 2, 0, 3, 2, 2, 2, 1, 2, 1, 3, 0, 0, 3, 1, 3, 2, 3, 0, 2, 3, 3, 1, 0],
  [0, 1, 0, 3, 2, 1, 2, 1, 0, 1, 3, 0, 0, 1, 0, 3, 3, 3, 0, 1, 0, 0],
  [0, 1, 2, 0, 1, 0, 1, 0, 0, 3, 3, 3, 2, 2, 0, 3, 1, 3, 3, 3, 2, 1, 3, 3, 1, 3, 2, 3, 0, 3, 3, 3, 0, 2, 1, 2, 3, 0, 0, 1, 3, 2, 1, 3, 2, 2, 3, 1, 3, 2, 1, 3, 1, 3, 3, 2, 2, 2, 0, 3, 0, 2, 0, 1, 0, 2, 0, 1, 0, 1, 2, 2, 3, 0, 1, 0],
  [0, 2, 2, 3, 1, 0, 2, 3, 0, 0, 1, 0, 3, 2, 0, 0, 3, 1, 1, 1, 2, 1, 3, 0, 3, 2, 1, 0, 1, 3, 2, 2, 1, 0, 0, 1, 3, 3, 0, 1, 2, 3, 3, 0, 2, 0, 1, 0, 0, 2, 0, 0, 2, 1, 3, 0, 2, 3, 2, 1, 3, 3, 0],
  [0, 1, 3, 1, 1, 2, 3, 0, 2, 0, 0, 3, 2, 3, 0, 1, 3, 0, 2, 2, 0, 2, 1, 2, 2, 2, 1, 0, 0, 3, 1, 2, 3, 2, 3, 1, 2, 1, 1, 3, 3, 3, 1, 1, 3, 0, 3, 2, 0, 3, 1, 1, 3, 3, 2, 1, 0, 1, 0],
  [0, 2, 2, 3, 2, 1, 1, 1, 2, 0, 3, 0, 2, 3, 0, 2, 3, 0, 0, 3, 2, 0, 2, 2, 2, 3, 3, 2, 0, 2, 1, 0, 3, 1, 0, 3, 2, 3, 0, 2, 2, 1, 3, 1, 0, 3, 1, 1, 3, 2, 3, 3, 3, 0],
  [0, 0, 0, 3, 1, 2, 0, 0, 0, 1, 3, 3, 0, 1, 0, 0],
  [0, 3, 3, 0, 3, 1, 3, 0, 1, 3, 3, 0, 3, 1, 0, 0, 1, 2, 3, 1, 1, 1, 0, 0, 1, 0],
];

let i: number = 0;
for (let test of tests) {
  console.time(i.toString());
  // logOutLeetcode(test);
  logOutList(minSideJumps(test));
  console.timeEnd(i.toString());
  i += 1;

}

/*
[0,2,1,0,3,0]
[0,1,2,3,0]
[0,2,3,2,0,2,2,0,0,1,2,3,3,0,3,0,1,2,2,0,3,2,2,2,2,3,2,2,1,2,1,1,2,3,1,1,2,3,2,0,2,1,2,3,1,0,0,1,2,1,3,3,0,0]
[0,0,1,1,1,0,0,1,3,3,3,2,2,1,2,0]
[0,0,3,1,3,0,2,0,2,3,3,3,2,0,1,2,2,3,1,0,3,0,3,2,2,3,0,0,0,2,1,3,1,3,1,3,3,0,2,2,3,2,3,2,0,1,0,2,2,0,2,2,1,2,0,1,1,1,2,1,1,0,2,3,0,3,2,2,1,0,1,3,1,3,1,1,3,0,0,0,2,2,1,0,2,2,3,0,1,2,0,1,1,1,0,0,3,2,3,0]
[0,1,0,1,1,1,1,3,2,3,0,1,2,2,2,2,0,1,3,0,3,2,1,3,0,2,0,2,0,1,1,2,0,3,2,0]
[0,1,0,3,3,2,0,2,0,0,0,0,1,3,3,2,0,3,3,1,2,2,1,3,0,2,0,3,1,1,3,3,3,3,0,3,3,1,3,1,2,1,2,3,3,0,1,0,2,3,1,3,0,1,2,2,0,3,3,1,3,0,0]
[0,1,1,0,3,2,3,0,0,1,2,0,1,0,2,2,1,1,2,3,1,3,3,2,2,3,2,3,2,0,0,0,1,3,2,0]
[0,0,0,3,3,1,2,3,0,2,1,0,1,1,0,2,1,2,0,2,3,3,1,2,3,1,0,0,0,0,3,0,3,1,1,2,3,0,3,0,0,2,2,0,0,1,0,0,1,2,1,3,3,2,3,1,1,0]
[0,3,1,1,1,3,1,2,3,0,3,3,1,3,1,3,1,0,3,3,2,1,2,0,1,2,3,1,0,0,2,1,3,3,2,0,2,3,2,2,3,0,0,0,3,0,0,1,1,2,2,0,1,0,3,0,2,0]
[0,2,2,1,1,1,0,0,2,2,0,2,1,1,0]
[0,1,2,3,0,1,2,0,1,3,3,3,0,2,1,0,1,2,3,1,1,0,1,3,0,1,1,3,2,0,3,2,3,1,2,0]
[0,2,3,3,0,1,2,1,3,0,0,3,0,0,1,1,1,3,2,3,1,0,0,1,2,0,1,3,0,0,0,1,0]
[0,3,0,3,0,0,1,2,2,0,1,0,1,0,1,3,1,3,2,2,3,3,2,0,1,3,3,0]
[0,2,3,0,3,2,1,2,2,1,0,2,0,2,1,1,0,3,3,2,1,2,1,3,2,1,0,3,0,1,0,2,1,0,1,2,0,2,1,2,2,3,1,1,2,0]
[0,3,0,2,1,2,3,2,2,3,2,2,3,2,2,0,0,2,3,2,1,0,0,0,0,1,0,0,3,2,0,3,1,0,1,3,1,2,3,2,1,2,3,3,0,1,0,2,2,2,3,1,3,0,1,2,1,2,1,3,0,2,3,2,3,0,2,2,2,1,2,3,0,3,3,2,1,2,2,3,1,3,1,2,1,3,3,3,1,3,2,3,3,0,1,1,2,0]
[0,1,0,1,3,0,3,3,0,0,1,3,1,1,0,3,3,3,1,1,2,0,2,1,1,2,3,0,3,3,1,2,2,0,3,1,2,2,0,3,2,1,3,1,2,2,1,2,0,2,0,1,1,0,0,2,2,0,3,1,3,0,1,1,2,1,0,2,2,0,1,2,3,1,1,2,1,0,0,1,0,3,2,3,3,3,2,1,1,0,2,0]
[0,2,2,0]
[0,0,0,0,0,0,2,3,1,0,3,0,0,2,3,0,0,0,1,0,3,3,1,2,0,1,0,0]
[0,3,0,1,0]
[0,2,2,3,1,0,1,0,1,1,3,2,0,1,0,1,0,3,2,3,1,1,1,0,0,3,2,3,0,2,3,1,3,2,3,3,0,3,2,2,2,0,2,2,1,3,3,0,2,2,1,2,1,3,2,2,0,2,0,3,2,2,3,2,3,2,3,2,3,2,0,0,0,1,0]
[0,3,3,0,0,1,0,3,0,0,2,2,1,1,2,3,2,1,2,2,1,2,1,3,3,3,0,1,2,2,2,3,2,0,0,3,1,3,0,3,0,3,0,3,0,0,1,0,0,1,2,0,0,3,3,1,1,1,2,0]
[0,1,3,2,1,2,0]
[0,2,3,2,2,0,3,1,1,1,2,3,3,2,0,2,1,1,3,3,0,1,0,0,0,1,2,1,0,2,2,1,2,3,1,1,1,1,3,2,2,1,2,2,1,2,0,2,0,0,3,3,3,2,2,3,2,0,0,0,0,0,1,3,3,3,2,3,1,0,3,0,2,0,0,0,2,0,0,1,0]
[0,3,2,3,1,0,1,0,1,0,3,3,2,1,0,3,0,3,2,3,1,3,0,0,3,3,2,3,1,2,2,3,2,3,0,0,0,3,3,2,3,1,2,1,1,3,2,0]
[0,0]
[0,2,2,3,0,2,2,2,0,2,2,2,1,1,3,3,1,1,2,1,2,1,3,1,2,2,0,3,1,3,3,3,0,0,1,3,1,2,3,0,1,1,1,1,2,3,2,0,3,0,3,0,0,3,3,2,3,3,3,2,2,0,2,3,2,1,0,3,0,1,2,2,0,2,3,3,2,1,2,3,1,2,2,0,0,2,2,1,2,3,1,0,3,2,2,0,0,1,0]
[0,2,3,0,0,1,0,1,1,0,2,2,3,0,1,3,1,1,1,3,2,0,2,0,1,0,2,3,0,0,0,0,0,3,0,3,1,0,2,2,1,3,3,0,1,3,0,3,2,0,3,1,0,0,2,2,2,1,3,0,0,0]
[0,3,2,2,0,0,3,3,0,2,2,0,0,0,1,0,3,0,3,2,3,3,2,3,3,2,2,0,0,0,2,3,0,2,1,2,2,0,2,1,0,2,2,0,0,3,0,0,3,3,2,0,3,3,0,2,0,3,1,0,2,0,2,3,2,3,2,3,0,3,0,3,2,2,1,0,2,0,1,2,0,1,0]
[0,0,2,3,1,0]
[0,2,0,3,2,3,1,0,0,3,3,3,1,2,3,3,3,0,2,3,3,1,2,1,2,0,3,2,3,0,0,0,1,3,1,3,0,0,3,1,2,3,1,3,3,0,0,1,3,0,1,1,3,3,3,0]
[0,3,3,0,2,0,0,1,2,0,0,1,3,2,0,2,1,1,2,3,1,0,1,3,2,3,3,3,2,3,2,2,2,1,3,1,3,1,2,0,1,3,0,2,3,1,0,0,1,3,2,3,1,0,1,3,3,2,1,2,1,2,2,1,0,2,0,1,1,0,1,0,1,3,1,0]
[0,3,3,2,3,1,0,1,0,0,0,1,0,0]
[0,0,2,2,2,2,0,1,3,1,0,0,2,1,1,0,1,3,2,2,0,3,3,1,0]
[0,3,1,1,0,1,3,1,2,3,3,0,1,0,0,3,2,3,0,0,0,0,1,1,3,2,1,1,2,3,1,0,2,2,1,2,0,0,3,1,2,3,0,1,0,1,1,1,3,2,3,3,3,0,2,0,0,1,2,2,1,3,3,3,0,3,1,1,0,1,3,1,0,1,0,2,3,2,3,2,2,3,1,2,0,1,0]
[0,2,2,1,2,0,1,0,3,3,3,1,2,2,2,1,0,1,2,0,1,1,1,1,0,3,3,1,0,3,1,1,3,0,2,0,3,3,3,0,3,3,2,3,3,1,3,3,3,0,2,3,1,2,2,3,2,0,2,2,2,0,1,2,1,0,3,0]
[0,3,0,3,0,3,2,0,0,0,3,1,0,1,3,3,0,0,2,1,1,2,3,3,0,1,2,0,1,3,1,0,2,0,3,3,2,3,2,0,0,1,1,3,3,1,3,2,0,3,1,1,2,2,0]
[0,3,0,0,0,3,2,3,0,0,3,3,0,1,1,2,1,0,2,1,3,3,1,3,1,1,1,0,0,1,3,3,1,1,3,2,1,1,3,0,0,2,1,2,3,0,3,0,1,3,1,2,0,1,1,1,2,1,2,3,0,0,1,2,3,3,0,2,2,2,0]
[0,1,2,3,1,0,0,2,3,2,0,1,0,0,2,2,0,2,1,2,3,0,2,2,3,1,0,2,3,0,3,2,2,1,0,1,0,2,2,2,2,3,0,0,0,3,0,3,2,1,2,0,1,2,3,2,0,1,1,2,2,3,3,2,3,0,0,1,0,2,0,1,2,3,2,2,1,3,0,2,0,2,2,0,2,3,0,0,2,1,3,0,1,3,0,2,0]
[0,0,1,1,2,0,3,2,3,0,2,3,3,0,1,0,0,3,2,3,2,2,2,3,0,3,0,3,2,3,0,2,0,0,1,3,3,0,1,0,0,3,2,3,2,0,0,2,3,0,3,1,3,1,0,1,3,0,0,2,0,0,2,1,1,0,3,2,2,0,0,1,0]
[0,3,2,0,0,3,3,2,0,1,2,3,1,2,3,2,0]
[0,1,2,1,0,2,1,1,3,0,2,3,0,2,0,3,2,3,0,2,3,1,2,3,0,1,1,3,3,0,0,1,1,0,3,3,0,1,3,2,0,2,3,1,2,3,2,3,3,3,0,0,2,2,2,2,3,3,0,0,2,3,1,3,2,3,0,0]
[0,3,0,1,0,0,2,0,3,2,3,3,2,3,0,1,3,2,1,2,1,0,2,2,2,3,3,1,2,0,3,2,2,3,3,3,0,1,1,1,2,1,1,0,3,1,2,0,3,0,1,0,0,1,2,0,1,3,1,0,2,0,0,0,1,2,2,2,2,0,0]
[0,0,3,1,3,1,3,2,1,3,1,3,3,2,3,2,0,0,1,2,1,2,2,2,1,3,3,3,1,3,1,2,1,2,3,0,3,3,3,1,1,3,0,2,3,3,1,2,0,2,0]
[0,3,0,2,0,1,2,0,1,1,2,3,0,1,1,1,2,2,0,0,0,0,3,2,1,1,0,3,1,0,0,3,0,3,3,1,0,3,0,2,2,0,2,0,0,0,3,1,0,1,3,1,0,3,2,2,2,1,0,0,0,2,1,3,1,1,3,3,1,3,3,2,2,0,1,3,3,2,0,3,2,2,2,1,2,1,3,0,0,3,1,3,2,3,0,2,3,3,1,0]
[0,1,0,3,2,1,2,1,0,1,3,0,0,1,0,3,3,3,0,1,0,0]
[0,1,2,0,1,0,1,0,0,3,3,3,2,2,0,3,1,3,3,3,2,1,3,3,1,3,2,3,0,3,3,3,0,2,1,2,3,0,0,1,3,2,1,3,2,2,3,1,3,2,1,3,1,3,3,2,2,2,0,3,0,2,0,1,0,2,0,1,0,1,2,2,3,0,1,0]
[0,2,2,3,1,0,2,3,0,0,1,0,3,2,0,0,3,1,1,1,2,1,3,0,3,2,1,0,1,3,2,2,1,0,0,1,3,3,0,1,2,3,3,0,2,0,1,0,0,2,0,0,2,1,3,0,2,3,2,1,3,3,0]
[0,1,3,1,1,2,3,0,2,0,0,3,2,3,0,1,3,0,2,2,0,2,1,2,2,2,1,0,0,3,1,2,3,2,3,1,2,1,1,3,3,3,1,1,3,0,3,2,0,3,1,1,3,3,2,1,0,1,0]
[0,2,2,3,2,1,1,1,2,0,3,0,2,3,0,2,3,0,0,3,2,0,2,2,2,3,3,2,0,2,1,0,3,1,0,3,2,3,0,2,2,1,3,1,0,3,1,1,3,2,3,3,3,0]
[0,0,0,3,1,2,0,0,0,1,3,3,0,1,0,0]
[0,3,3,0,3,1,3,0,1,3,3,0,3,1,0,0,1,2,3,1,1,1,0,0,1,0]
*/