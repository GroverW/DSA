/*
There is a one-dimensional garden on the x-axis. The garden starts at the point 0 and ends at the point n. (i.e The length of the garden is n).

There are n + 1 taps located at points [0, 1, ..., n] in the garden.

Given an integer n and an integer array ranges of length n + 1 where ranges[i] (0-indexed) means the i-th tap can water the area [i - ranges[i], i + ranges[i]] if it was open.

Return the minimum number of taps that should be open to water the whole garden, If the garden cannot be watered return -1.

 

Example 1:


Input: n = 5, ranges = [3,4,1,1,0,0]
Output: 1
Explanation: The tap at point 0 can cover the interval [-3,3]
The tap at point 1 can cover the interval [-3,5]
The tap at point 2 can cover the interval [1,3]
The tap at point 3 can cover the interval [2,4]
The tap at point 4 can cover the interval [4,4]
The tap at point 5 can cover the interval [5,5]
Opening Only the second tap will water the whole garden [0,5]
Example 2:

Input: n = 3, ranges = [0,0,0,0]
Output: -1
Explanation: Even if you activate all the four taps you cannot water the whole garden.
Example 3:

Input: n = 7, ranges = [1,2,1,0,2,1,0,1]
Output: 3
Example 4:

Input: n = 8, ranges = [4,0,0,0,0,0,0,0,4]
Output: 2
Example 5:

Input: n = 8, ranges = [4,0,0,0,4,0,0,0,4]
Output: 1
 

Constraints:

1 <= n <= 10^4
ranges.length == n + 1
0 <= ranges[i] <= 100
*/

// const maxLen: number = 100;

// for (let i = 0; i < 50; i += 1) {
//   const len = numberBetween(2, maxLen);
//   const n = len - 1;
//   const ranges = new Array(len).fill(0).map(() => numberBetween(0   , 15))

//   // logOutList('"' + words.trimEnd() + '"')
//   // logOutList(printRow([houses, costs, len, numColors, target]) + ',')
//   // logOutList(printRow(stones));
//   // logOutList(printRow([jobs, k]) + ',');
//   logOutLeetcode([n, ranges])
// }

// could be bad depending on inputs
var minTaps = function(n, ranges) {
  const MAX = 10 ** 5;
  const minRequired = new Array(ranges.length).fill(MAX);
  let end = 0;
  for(let i = 1; i <= ranges.length; i += 1) {
    if (!ranges[i] || i + ranges[i] <= end) continue;
    const first = Math.max(0, i - ranges[i]);
    const last = Math.min(n, i + ranges[i]);
    
    const numRequired = 1 + (minRequired[first - 1] || 0);
    
    for (let j = first; j < last; j += 1) {
      minRequired[j] = Math.min(minRequired[j], numRequired)
    }
    
    if (last === n) {
      minRequired[n] = Math.min(minRequired[n], numRequired);
    }
    end = last;
  }
  
  const cantReach = minRequired.some((required) => required === MAX);
  return cantReach ? -1 : minRequired[n];
};


// smarter
var minTaps = function (n, ranges) {
  const maxReachable = new Array(ranges.length).fill(0);

  ranges.forEach((range, i) => {
    const first = Math.max(0, i - range);
    const last = Math.min(n, i + range);

    maxReachable[first] = Math.max(maxReachable[first], last);
  });

  let max = maxReachable[0];
  let nextMax = 0;
  let numTaps = 1;
  for (let i = 0; i < maxReachable.length; i += 1) {
    nextMax = Math.max(nextMax, maxReachable[i]);
    if (i >= max) {
      numTaps += 1;
      if (i >= nextMax) {
        return -1;
      }
      max = nextMax;
    }
    if (max >= n) return numTaps;
  }
  return -1;
};

const tests: Indexable<any>[] = [
  [1, [1,0]],
  [5, [3,4,1,1,0,0]],
  [7, [1,2,1,0,2,1,0,1]],
  [8,[4,0,0,0,0,0,0,0,4]],
  [47,[13,8,5,12,14,10,11,6,6,5,1,11,6,8,10,14,7,13,5,12,13,8,15,6,1,13,6,1,4,10,3,9,12,1,4,5,11,12,1,10,7,4,2,4,5,4,12,14]],
  [19,[5,5,3,2,11,1,6,1,9,15,12,8,6,4,6,6,3,14,14,7]],
  [94,[11,14,12,4,7,7,0,6,5,6,3,9,1,15,7,14,0,7,7,10,10,13,8,15,0,13,9,11,4,6,10,4,3,9,11,7,0,0,4,4,12,12,10,14,13,7,5,9,3,13,0,13,8,3,5,10,8,11,1,1,8,4,6,9,13,14,9,9,8,8,11,0,8,15,3,7,8,3,1,11,4,11,13,4,9,6,6,9,2,5,4,14,1,1,14]],
  [33,[10,10,2,5,2,0,4,1,3,11,4,15,8,10,0,13,1,5,5,13,6,10,14,15,5,2,15,6,1,13,5,14,12,10]],
  [41,[10,7,1,0,2,7,14,11,9,1,11,5,10,8,6,4,9,3,11,2,4,7,5,12,12,0,11,14,9,13,8,5,14,1,12,12,0,2,15,10,7,3]],
  [96,[3,7,8,12,7,10,3,11,9,0,13,12,12,6,11,4,15,3,7,13,1,5,2,7,14,15,13,10,4,11,13,5,9,4,0,9,14,11,6,9,6,14,0,12,7,2,2,1,11,3,5,14,9,8,3,14,5,10,1,9,4,6,9,8,10,12,12,8,4,2,5,2,11,1,15,2,9,14,14,2,13,6,9,1,11,8,5,12,0,10,7,1,14,6,4,2,11]],
  [84,[9,4,12,9,6,12,4,8,4,6,13,9,11,8,10,14,10,3,9,14,5,11,14,12,11,1,3,15,5,8,11,0,0,2,14,2,10,2,10,12,13,13,12,2,7,11,14,8,9,0,15,5,14,0,12,1,7,4,4,2,7,1,13,0,3,12,6,9,15,1,2,1,5,14,4,0,11,14,3,11,14,5,14,9,10]],
  [2,[6,0,4]],
  [3,[13,5,6,14]],
  [29,[5,15,8,10,2,5,13,1,9,14,11,8,12,14,7,3,10,13,10,4,2,3,2,12,11,5,14,13,8,12]],
  [81,[10,1,0,1,2,5,9,8,10,12,10,11,8,4,12,14,6,3,3,15,12,5,5,2,7,9,5,9,2,4,13,11,13,13,9,14,14,4,15,14,0,12,9,0,0,8,8,6,14,8,15,8,14,6,10,15,9,11,0,9,13,9,5,15,9,8,5,11,13,2,5,11,13,6,15,0,1,12,6,0,7,11]],
  [91,[14,14,6,12,15,8,0,4,10,9,11,7,13,3,0,7,9,3,15,2,11,2,3,9,2,3,12,13,1,2,8,12,1,6,10,11,7,11,12,5,9,4,6,2,4,11,1,8,15,0,9,7,8,3,15,4,4,14,6,5,2,12,11,6,9,15,9,15,4,15,6,8,6,2,11,10,8,2,3,2,1,11,0,9,11,14,4,3,12,12,9,4]],
  [40,[5,14,5,0,14,11,14,1,10,14,7,2,0,0,8,14,2,15,2,6,9,1,0,0,15,11,9,13,10,15,14,12,9,2,2,13,9,1,3,14,6]],
  [94,[11,7,6,11,6,7,8,13,13,1,6,14,15,6,0,5,9,12,0,1,8,4,7,11,12,3,13,1,14,6,2,12,3,15,9,5,12,8,0,6,14,2,0,3,1,9,4,9,13,4,1,3,15,12,10,4,9,13,10,5,5,4,3,7,11,12,2,15,6,2,3,2,12,14,8,2,9,5,9,0,2,15,10,3,5,1,2,6,4,5,12,1,2,7,6]],
  [85,[13,12,14,13,5,7,5,10,8,10,0,1,9,2,9,6,8,2,5,11,12,0,7,9,1,4,5,14,7,5,14,9,11,2,10,6,12,9,7,8,1,10,7,5,10,4,7,13,5,2,2,5,3,13,12,1,1,14,15,10,14,15,0,10,5,6,12,0,10,15,5,2,5,7,3,4,11,4,11,7,0,1,2,10,0,7]],
  [97,[0,3,2,5,4,10,12,10,7,3,13,12,12,0,15,12,15,4,1,0,4,8,6,0,0,0,15,5,2,8,2,9,8,10,5,12,15,5,1,3,9,0,10,0,8,13,1,7,0,2,11,10,1,13,9,6,13,3,14,11,4,0,7,10,8,7,14,2,6,6,15,15,7,9,5,4,5,4,3,13,2,15,7,9,4,3,5,13,13,12,11,9,15,10,15,4,0,7]],
  [68,[12,6,14,15,12,6,14,2,0,3,5,15,15,15,2,13,12,13,10,8,3,13,4,6,15,2,5,6,0,8,7,7,11,5,4,4,3,5,6,2,10,7,2,10,13,11,3,6,11,15,0,8,10,11,4,0,14,11,5,7,0,1,1,9,1,13,3,2,12]],
  [64,[13,0,5,14,1,4,9,10,14,12,10,12,11,13,8,15,10,13,10,4,10,1,5,0,0,6,6,9,11,13,4,6,5,7,13,11,13,11,8,7,12,2,12,12,13,13,15,6,13,4,11,6,0,4,14,14,6,9,6,7,13,11,12,6,0]],
  [23,[8,4,10,11,12,7,11,6,13,1,7,15,9,2,14,0,0,9,4,13,10,2,14,9]],
  [47,[6,15,12,9,9,1,1,1,7,6,10,15,2,13,5,4,7,11,4,1,2,12,4,9,6,6,9,3,11,11,1,2,5,1,5,11,1,12,13,13,5,11,0,15,13,6,10,11]],
  [43,[2,11,11,0,5,14,10,10,4,12,10,9,14,14,6,12,9,1,3,9,14,13,5,0,2,1,4,0,6,14,7,3,13,8,15,11,10,14,10,8,8,3,14,6]],
  [46,[3,11,14,5,1,6,3,6,12,8,15,1,1,7,10,0,6,4,4,14,1,1,5,8,15,6,0,5,7,5,7,2,12,4,2,13,5,2,8,0,11,3,9,5,9,14,3]],
  [54,[5,4,9,13,4,13,2,11,9,5,0,5,7,8,6,11,12,5,12,7,13,0,12,13,4,0,13,14,9,3,7,7,8,7,6,12,7,3,10,12,10,13,1,12,7,5,4,6,8,12,10,8,2,11,3]],
  [40,[6,7,6,10,5,8,1,8,12,9,3,8,9,13,3,15,2,5,0,5,11,1,0,8,2,15,12,2,12,14,8,3,3,2,14,0,7,2,4,15,3]],
  [82,[13,0,1,0,3,7,8,15,7,1,11,11,4,13,4,9,3,3,2,10,12,12,3,12,14,10,8,11,9,1,14,2,14,15,4,9,0,0,5,11,11,2,3,15,3,7,0,14,8,6,10,9,0,9,1,7,6,8,0,4,11,2,8,9,12,4,10,7,14,6,9,0,8,9,4,3,7,3,8,10,5,1,7]],
  [68,[14,0,13,5,11,15,4,10,4,11,8,12,6,0,14,10,12,8,2,14,1,6,5,4,1,7,3,15,3,6,11,4,13,4,10,10,10,13,0,6,2,6,13,9,6,5,0,14,6,6,13,6,10,7,12,12,15,5,3,10,12,12,10,4,12,12,15,3,5]],
  [23,[13,15,1,11,14,7,5,0,12,8,10,8,10,1,12,12,6,10,7,4,0,11,0,4]],
  [9,[7,4,9,10,7,2,14,4,13,0]],
  [44,[11,3,13,12,7,6,6,5,13,0,5,13,6,7,12,5,3,3,12,7,4,12,3,0,6,5,3,12,9,13,5,0,1,15,14,8,14,4,0,8,5,12,2,1,0]],
  [24,[3,1,14,13,11,5,6,0,7,0,1,9,5,2,15,0,14,13,13,14,10,5,3,14,9]],
  [19,[7,11,0,3,4,12,14,9,6,15,13,2,11,2,0,13,12,9,13,9]],
  [45,[4,4,7,10,15,1,12,7,2,7,13,12,0,7,14,9,1,12,2,11,13,2,1,5,1,15,7,14,8,10,13,2,9,7,13,2,14,11,3,6,1,6,8,8,3,0]],
  [67,[8,8,14,4,15,2,8,7,10,6,14,8,6,9,5,1,7,10,8,10,13,2,0,5,10,2,14,13,15,13,1,15,4,3,5,7,7,15,11,14,3,12,15,13,8,4,14,4,9,11,3,1,13,3,7,12,9,1,9,1,11,4,11,15,9,1,2,12]],
  [10,[14,5,15,2,3,7,12,15,5,15,2]],
  [43,[0,5,7,10,6,14,14,3,3,15,4,14,6,14,1,9,4,5,3,13,0,5,7,4,9,5,12,1,13,5,13,12,3,14,12,13,5,1,11,4,7,0,2,3]],
  [57,[12,10,2,9,14,5,5,7,8,7,4,11,11,10,2,8,11,10,11,3,10,5,6,4,7,14,11,11,5,10,15,11,4,12,13,6,8,0,13,0,3,1,6,1,1,14,9,7,1,13,4,5,10,14,6,6,14,14]],
  [34,[5,13,13,5,5,7,13,10,8,6,13,11,13,2,1,5,8,15,0,5,6,7,13,4,13,13,11,2,7,11,13,4,8,12,4]],
  [91,[12,6,9,9,14,4,5,11,1,13,6,11,5,5,2,15,13,15,1,6,2,13,2,5,5,8,11,2,12,6,14,12,6,12,8,14,1,3,2,12,12,6,3,9,15,7,3,15,11,7,8,10,12,9,6,13,7,11,2,0,13,0,14,3,5,3,4,0,1,15,6,0,11,1,15,6,12,14,2,5,12,14,3,11,14,15,1,3,13,2,2,14]],
  [85,[13,12,3,10,13,7,14,6,14,0,13,2,8,9,15,10,0,12,13,12,6,14,14,10,2,3,12,7,0,8,1,4,9,9,4,12,1,10,0,1,2,4,2,5,0,7,0,3,11,14,4,11,14,11,3,4,4,9,11,5,6,2,10,4,10,2,13,3,1,9,9,6,15,12,8,8,13,14,6,2,15,10,12,11,10,10]],
  [75,[6,5,14,8,5,12,1,11,2,14,3,13,6,11,15,2,13,6,0,0,1,14,2,12,8,10,3,14,4,7,4,9,4,8,2,7,0,8,7,9,6,3,0,3,5,6,3,1,4,3,2,13,2,14,8,0,1,2,5,0,8,8,8,13,6,3,8,8,9,3,3,9,8,10,9,12]],
  [12,[15,15,7,3,13,8,2,14,1,5,14,5,3]],
  [26,[5,8,11,13,9,15,13,11,0,5,8,1,6,5,2,3,13,0,11,4,14,12,1,5,11,0,9]],
  [48,[8,15,2,10,13,13,11,7,12,11,1,5,12,0,0,1,4,9,4,5,13,3,12,5,0,4,14,15,8,13,13,8,12,0,4,9,3,14,9,0,4,2,15,7,10,7,3,13,7]],
  [18,[4,3,0,4,5,4,15,1,6,4,9,2,4,13,5,10,10,13,3]],
  [76,[2,8,8,4,11,5,4,12,3,11,11,11,5,0,10,14,2,12,10,2,9,10,4,2,8,12,10,0,9,8,1,15,6,7,1,7,15,10,10,6,10,10,11,9,8,5,15,11,10,6,6,11,7,9,9,4,2,14,10,12,10,5,8,15,11,10,5,15,11,9,11,10,1,10,11,13,1]],
  [74,[5,2,10,9,15,5,10,5,2,8,10,15,3,12,5,1,6,1,12,1,1,2,9,0,12,8,2,1,5,3,6,3,15,6,13,10,7,9,11,1,10,12,7,13,14,14,0,8,3,1,7,6,15,6,10,15,6,7,9,11,7,15,15,12,7,8,15,9,11,13,11,10,14,3,3]],
  [48,[6,8,5,12,14,8,3,11,13,14,5,1,0,9,3,13,12,4,11,4,12,6,0,13,1,2,0,11,5,10,4,1,8,7,10,12,12,10,2,9,13,14,15,0,4,6,7,10,4]],
  [42,[0,4,6,13,2,10,9,12,9,6,2,6,10,7,7,8,0,8,15,10,12,7,8,4,15,1,5,5,11,11,11,7,2,13,14,15,8,6,0,7,0,11,1]],
  [90,[5,15,2,0,7,1,2,0,2,1,13,2,8,14,9,12,14,7,12,12,9,1,8,1,3,10,14,5,14,5,1,7,12,5,10,8,1,15,10,10,15,12,5,11,8,13,5,7,12,15,11,15,3,12,7,12,8,4,11,13,10,2,13,14,7,6,9,6,0,6,10,2,9,8,10,7,3,4,13,6,14,9,8,10,2,10,8,12,0,8,2]],
  [8,[4,4,13,8,3,9,15,1,6]],
];



let i: number = 0;
for (let test of tests) {
  const [n, ranges] = test;
  console.time(i.toString());
  // logOutLeetcode(test);
  logOutList(minTaps(n, ranges));
  console.timeEnd(i.toString());
  i += 1;

}



/*
[30,15,45,8,22,38,49,4,11,19,26,34,41,48,51,2,6,9,13,17,20,24,28,32,36,40,43,47,null,50,null,46,3,5,7,null,10,12,14,16,18,null,21,23,25,27,29,31,33,35,37,39,null,42,44,1]


47
[13,8,5,12,14,10,11,6,6,5,1,11,6,8,10,14,7,13,5,12,13,8,15,6,1,13,6,1,4,10,3,9,12,1,4,5,11,12,1,10,7,4,2,4,5,4,12,14]
19
[5,5,3,2,11,1,6,1,9,15,12,8,6,4,6,6,3,14,14,7]
94
[11,14,12,4,7,7,0,6,5,6,3,9,1,15,7,14,0,7,7,10,10,13,8,15,0,13,9,11,4,6,10,4,3,9,11,7,0,0,4,4,12,12,10,14,13,7,5,9,3,13,0,13,8,3,5,10,8,11,1,1,8,4,6,9,13,14,9,9,8,8,11,0,8,15,3,7,8,3,1,11,4,11,13,4,9,6,6,9,2,5,4,14,1,1,14]
33
[10,10,2,5,2,0,4,1,3,11,4,15,8,10,0,13,1,5,5,13,6,10,14,15,5,2,15,6,1,13,5,14,12,10]
41
[10,7,1,0,2,7,14,11,9,1,11,5,10,8,6,4,9,3,11,2,4,7,5,12,12,0,11,14,9,13,8,5,14,1,12,12,0,2,15,10,7,3]
96
[3,7,8,12,7,10,3,11,9,0,13,12,12,6,11,4,15,3,7,13,1,5,2,7,14,15,13,10,4,11,13,5,9,4,0,9,14,11,6,9,6,14,0,12,7,2,2,1,11,3,5,14,9,8,3,14,5,10,1,9,4,6,9,8,10,12,12,8,4,2,5,2,11,1,15,2,9,14,14,2,13,6,9,1,11,8,5,12,0,10,7,1,14,6,4,2,11]
84
[9,4,12,9,6,12,4,8,4,6,13,9,11,8,10,14,10,3,9,14,5,11,14,12,11,1,3,15,5,8,11,0,0,2,14,2,10,2,10,12,13,13,12,2,7,11,14,8,9,0,15,5,14,0,12,1,7,4,4,2,7,1,13,0,3,12,6,9,15,1,2,1,5,14,4,0,11,14,3,11,14,5,14,9,10]
2
[6,0,4]
3
[13,5,6,14]
29
[5,15,8,10,2,5,13,1,9,14,11,8,12,14,7,3,10,13,10,4,2,3,2,12,11,5,14,13,8,12]
81
[10,1,0,1,2,5,9,8,10,12,10,11,8,4,12,14,6,3,3,15,12,5,5,2,7,9,5,9,2,4,13,11,13,13,9,14,14,4,15,14,0,12,9,0,0,8,8,6,14,8,15,8,14,6,10,15,9,11,0,9,13,9,5,15,9,8,5,11,13,2,5,11,13,6,15,0,1,12,6,0,7,11]
91
[14,14,6,12,15,8,0,4,10,9,11,7,13,3,0,7,9,3,15,2,11,2,3,9,2,3,12,13,1,2,8,12,1,6,10,11,7,11,12,5,9,4,6,2,4,11,1,8,15,0,9,7,8,3,15,4,4,14,6,5,2,12,11,6,9,15,9,15,4,15,6,8,6,2,11,10,8,2,3,2,1,11,0,9,11,14,4,3,12,12,9,4]
40
[5,14,5,0,14,11,14,1,10,14,7,2,0,0,8,14,2,15,2,6,9,1,0,0,15,11,9,13,10,15,14,12,9,2,2,13,9,1,3,14,6]
94
[11,7,6,11,6,7,8,13,13,1,6,14,15,6,0,5,9,12,0,1,8,4,7,11,12,3,13,1,14,6,2,12,3,15,9,5,12,8,0,6,14,2,0,3,1,9,4,9,13,4,1,3,15,12,10,4,9,13,10,5,5,4,3,7,11,12,2,15,6,2,3,2,12,14,8,2,9,5,9,0,2,15,10,3,5,1,2,6,4,5,12,1,2,7,6]
85
[13,12,14,13,5,7,5,10,8,10,0,1,9,2,9,6,8,2,5,11,12,0,7,9,1,4,5,14,7,5,14,9,11,2,10,6,12,9,7,8,1,10,7,5,10,4,7,13,5,2,2,5,3,13,12,1,1,14,15,10,14,15,0,10,5,6,12,0,10,15,5,2,5,7,3,4,11,4,11,7,0,1,2,10,0,7]
97
[0,3,2,5,4,10,12,10,7,3,13,12,12,0,15,12,15,4,1,0,4,8,6,0,0,0,15,5,2,8,2,9,8,10,5,12,15,5,1,3,9,0,10,0,8,13,1,7,0,2,11,10,1,13,9,6,13,3,14,11,4,0,7,10,8,7,14,2,6,6,15,15,7,9,5,4,5,4,3,13,2,15,7,9,4,3,5,13,13,12,11,9,15,10,15,4,0,7]
68
[12,6,14,15,12,6,14,2,0,3,5,15,15,15,2,13,12,13,10,8,3,13,4,6,15,2,5,6,0,8,7,7,11,5,4,4,3,5,6,2,10,7,2,10,13,11,3,6,11,15,0,8,10,11,4,0,14,11,5,7,0,1,1,9,1,13,3,2,12]
64
[13,0,5,14,1,4,9,10,14,12,10,12,11,13,8,15,10,13,10,4,10,1,5,0,0,6,6,9,11,13,4,6,5,7,13,11,13,11,8,7,12,2,12,12,13,13,15,6,13,4,11,6,0,4,14,14,6,9,6,7,13,11,12,6,0]
23
[8,4,10,11,12,7,11,6,13,1,7,15,9,2,14,0,0,9,4,13,10,2,14,9]
47
[6,15,12,9,9,1,1,1,7,6,10,15,2,13,5,4,7,11,4,1,2,12,4,9,6,6,9,3,11,11,1,2,5,1,5,11,1,12,13,13,5,11,0,15,13,6,10,11]
43
[2,11,11,0,5,14,10,10,4,12,10,9,14,14,6,12,9,1,3,9,14,13,5,0,2,1,4,0,6,14,7,3,13,8,15,11,10,14,10,8,8,3,14,6]
46
[3,11,14,5,1,6,3,6,12,8,15,1,1,7,10,0,6,4,4,14,1,1,5,8,15,6,0,5,7,5,7,2,12,4,2,13,5,2,8,0,11,3,9,5,9,14,3]
54
[5,4,9,13,4,13,2,11,9,5,0,5,7,8,6,11,12,5,12,7,13,0,12,13,4,0,13,14,9,3,7,7,8,7,6,12,7,3,10,12,10,13,1,12,7,5,4,6,8,12,10,8,2,11,3]
40
[6,7,6,10,5,8,1,8,12,9,3,8,9,13,3,15,2,5,0,5,11,1,0,8,2,15,12,2,12,14,8,3,3,2,14,0,7,2,4,15,3]
82
[13,0,1,0,3,7,8,15,7,1,11,11,4,13,4,9,3,3,2,10,12,12,3,12,14,10,8,11,9,1,14,2,14,15,4,9,0,0,5,11,11,2,3,15,3,7,0,14,8,6,10,9,0,9,1,7,6,8,0,4,11,2,8,9,12,4,10,7,14,6,9,0,8,9,4,3,7,3,8,10,5,1,7]
68
[14,0,13,5,11,15,4,10,4,11,8,12,6,0,14,10,12,8,2,14,1,6,5,4,1,7,3,15,3,6,11,4,13,4,10,10,10,13,0,6,2,6,13,9,6,5,0,14,6,6,13,6,10,7,12,12,15,5,3,10,12,12,10,4,12,12,15,3,5]
23
[13,15,1,11,14,7,5,0,12,8,10,8,10,1,12,12,6,10,7,4,0,11,0,4]
9
[7,4,9,10,7,2,14,4,13,0]
44
[11,3,13,12,7,6,6,5,13,0,5,13,6,7,12,5,3,3,12,7,4,12,3,0,6,5,3,12,9,13,5,0,1,15,14,8,14,4,0,8,5,12,2,1,0]
24
[3,1,14,13,11,5,6,0,7,0,1,9,5,2,15,0,14,13,13,14,10,5,3,14,9]
19
[7,11,0,3,4,12,14,9,6,15,13,2,11,2,0,13,12,9,13,9]
45
[4,4,7,10,15,1,12,7,2,7,13,12,0,7,14,9,1,12,2,11,13,2,1,5,1,15,7,14,8,10,13,2,9,7,13,2,14,11,3,6,1,6,8,8,3,0]
67
[8,8,14,4,15,2,8,7,10,6,14,8,6,9,5,1,7,10,8,10,13,2,0,5,10,2,14,13,15,13,1,15,4,3,5,7,7,15,11,14,3,12,15,13,8,4,14,4,9,11,3,1,13,3,7,12,9,1,9,1,11,4,11,15,9,1,2,12]
10
[14,5,15,2,3,7,12,15,5,15,2]
43
[0,5,7,10,6,14,14,3,3,15,4,14,6,14,1,9,4,5,3,13,0,5,7,4,9,5,12,1,13,5,13,12,3,14,12,13,5,1,11,4,7,0,2,3]
57
[12,10,2,9,14,5,5,7,8,7,4,11,11,10,2,8,11,10,11,3,10,5,6,4,7,14,11,11,5,10,15,11,4,12,13,6,8,0,13,0,3,1,6,1,1,14,9,7,1,13,4,5,10,14,6,6,14,14]
34
[5,13,13,5,5,7,13,10,8,6,13,11,13,2,1,5,8,15,0,5,6,7,13,4,13,13,11,2,7,11,13,4,8,12,4]
91
[12,6,9,9,14,4,5,11,1,13,6,11,5,5,2,15,13,15,1,6,2,13,2,5,5,8,11,2,12,6,14,12,6,12,8,14,1,3,2,12,12,6,3,9,15,7,3,15,11,7,8,10,12,9,6,13,7,11,2,0,13,0,14,3,5,3,4,0,1,15,6,0,11,1,15,6,12,14,2,5,12,14,3,11,14,15,1,3,13,2,2,14]
85
[13,12,3,10,13,7,14,6,14,0,13,2,8,9,15,10,0,12,13,12,6,14,14,10,2,3,12,7,0,8,1,4,9,9,4,12,1,10,0,1,2,4,2,5,0,7,0,3,11,14,4,11,14,11,3,4,4,9,11,5,6,2,10,4,10,2,13,3,1,9,9,6,15,12,8,8,13,14,6,2,15,10,12,11,10,10]
75
[6,5,14,8,5,12,1,11,2,14,3,13,6,11,15,2,13,6,0,0,1,14,2,12,8,10,3,14,4,7,4,9,4,8,2,7,0,8,7,9,6,3,0,3,5,6,3,1,4,3,2,13,2,14,8,0,1,2,5,0,8,8,8,13,6,3,8,8,9,3,3,9,8,10,9,12]
12
[15,15,7,3,13,8,2,14,1,5,14,5,3]
26
[5,8,11,13,9,15,13,11,0,5,8,1,6,5,2,3,13,0,11,4,14,12,1,5,11,0,9]
48
[8,15,2,10,13,13,11,7,12,11,1,5,12,0,0,1,4,9,4,5,13,3,12,5,0,4,14,15,8,13,13,8,12,0,4,9,3,14,9,0,4,2,15,7,10,7,3,13,7]
18
[4,3,0,4,5,4,15,1,6,4,9,2,4,13,5,10,10,13,3]
76
[2,8,8,4,11,5,4,12,3,11,11,11,5,0,10,14,2,12,10,2,9,10,4,2,8,12,10,0,9,8,1,15,6,7,1,7,15,10,10,6,10,10,11,9,8,5,15,11,10,6,6,11,7,9,9,4,2,14,10,12,10,5,8,15,11,10,5,15,11,9,11,10,1,10,11,13,1]
74
[5,2,10,9,15,5,10,5,2,8,10,15,3,12,5,1,6,1,12,1,1,2,9,0,12,8,2,1,5,3,6,3,15,6,13,10,7,9,11,1,10,12,7,13,14,14,0,8,3,1,7,6,15,6,10,15,6,7,9,11,7,15,15,12,7,8,15,9,11,13,11,10,14,3,3]
48
[6,8,5,12,14,8,3,11,13,14,5,1,0,9,3,13,12,4,11,4,12,6,0,13,1,2,0,11,5,10,4,1,8,7,10,12,12,10,2,9,13,14,15,0,4,6,7,10,4]
42
[0,4,6,13,2,10,9,12,9,6,2,6,10,7,7,8,0,8,15,10,12,7,8,4,15,1,5,5,11,11,11,7,2,13,14,15,8,6,0,7,0,11,1]
90
[5,15,2,0,7,1,2,0,2,1,13,2,8,14,9,12,14,7,12,12,9,1,8,1,3,10,14,5,14,5,1,7,12,5,10,8,1,15,10,10,15,12,5,11,8,13,5,7,12,15,11,15,3,12,7,12,8,4,11,13,10,2,13,14,7,6,9,6,0,6,10,2,9,8,10,7,3,4,13,6,14,9,8,10,2,10,8,12,0,8,2]
8
[4,4,13,8,3,9,15,1,6]
*/