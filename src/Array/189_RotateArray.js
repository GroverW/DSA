/*
Given an array, rotate the array to the right by k steps, where k is non-negative.

Follow up:

Try to come up as many solutions as you can, there are at least 3 different ways to solve this problem.
Could you do it in-place with O(1) extra space?
 

Example 1:

Input: nums = [1,2,3,4,5,6,7], k = 3
Output: [5,6,7,1,2,3,4]
Explanation:
rotate 1 steps to the right: [7,1,2,3,4,5,6]
rotate 2 steps to the right: [6,7,1,2,3,4,5]
rotate 3 steps to the right: [5,6,7,1,2,3,4]
Example 2:

Input: nums = [-1,-100,3,99], k = 2
Output: [3,99,-1,-100]
Explanation: 
rotate 1 steps to the right: [99,-1,-100,3]
rotate 2 steps to the right: [3,99,-1,-100]
 

Constraints:

1 <= nums.length <= 2 * 104
-231 <= nums[i] <= 231 - 1
0 <= k <= 105
*/

var rotate = function (nums, k) {
  let inc = k % nums.length;
  if (!inc) return nums;

  let numSwaps = 0;
  let i = 0;

  while (numSwaps < nums.length) {
    let start = i;
    let curr = nums[i];
    let nextIdx = (i + inc) % nums.length;
    let next = nums[nextIdx];
    while (nextIdx !== start) {
      nums[nextIdx] = curr;
      curr = next;
      i = nextIdx;
      nextIdx = (i + inc) % nums.length
      next = nums[nextIdx];
      numSwaps += 1;
    }
    nums[nextIdx] = curr;
    numSwaps += 1;
    if (numSwaps === nums.length) break;
    i += 1;
  }

  return nums;
};

const tests = [
  [[1, 3, -1, -3, 5, 3, 6, 7], 3],
  [[1, 2, 3, 4, 5, 6, 7, 8, 9], 1],
  [[1, 2, 3, 4, 5, 6, 7, 8, 9], 2],
  [[1, 2, 3, 4, 5, 6, 7, 8, 9], 3],
  [[1, 2, 3, 4, 5, 6, 7, 8, 9], 4],
  [[1, 2, 3, 4, 5, 6, 7, 8, 9], 5],
  [[1, 2, 3, 4, 5, 6, 7, 8, 9], 6],
  [[1, 2, 3, 4, 5, 6, 7, 8, 9], 7],
  [[1, 2, 3, 4, 5, 6, 7, 8, 9], 8],
  [[1, 2, 3, 4, 5, 6, 7, 8, 9], 9],
  [[1, 2, 3, 4, 5, 6, 7, 8, 9], 10],
  [[1, 2, 3, 4, 5, 6, 7, 8, 9], 11],
  [[1, 2, 3, 4, 5, 6, 7, 8, 9], 12],
  [[1, 2, 3, 4, 5, 6, 7, 8], 1],
  [[1, 2, 3, 4, 5, 6, 7, 8], 2],
  [[1, 2, 3, 4, 5, 6, 7, 8], 3],
  [[1, 2, 3, 4, 5, 6, 7, 8], 4],
  [[1, 2, 3, 4, 5, 6, 7, 8], 5],
  [[1, 2, 3, 4, 5, 6, 7, 8], 6],
  [[1, 2, 3, 4, 5, 6, 7, 8], 7],
  [[1, 2, 3, 4, 5, 6, 7, 8], 8],
  [[1, 2, 3, 4, 5, 6, 7, 8], 9],
  [[1, 2, 3, 4, 5, 6, 7, 8], 10],
  [[1, 2, 3, 4, 5, 6, 7, 8], 11],
  [[1, 2, 3, 4, 5, 6, 7, 8], 12],
  [[1], 1],
  [[1, -1], 1],
  [[9, 11], 2],
  [[847, 170, 900, 999, 710, 748, 676, 173, 856, 55, 995, 208, 796, 205, 976, 502, 646, 474, 210, 956, 646, 459, 202, 152, 771, 282, 433, 699, 48, 635, 391, 615, 694, 363, 223, 720, 638, 308, 95, 135, 186, 663, 309, 390, 349, 416, 384, 271, 280, 522], 15],
  [[307, 418, 334], 3],
  [[96, 605, 367, 506, 597, 560, 929, 376, 938, 878, 177, 337, 806, 197, 707, 997], 5],
  [[358, 518, 456, 838, 30, 262, 348, 14, 909], 3],
  [[432, 496, 516, 827, 987, 939, 732, 931, 840, 173, 964, 463, 772, 991, 526, 45, 68, 600, 566, 709, 998, 281, 742, 330, 517, 539, 892, 851, 802, 784, 636, 207, 602, 244, 343, 955], 10],
  [[15, 621, 772, 322, 937, 36, 599, 590, 310, 218, 745, 386, 923, 328, 918, 687, 597, 432, 698, 22, 537, 936, 199, 689, 821, 477, 899, 62, 937, 557, 672, 378, 143, 856, 450, 47, 142, 237, 874, 391, 120, 322, 385, 36, 328, 633, 763, 314, 890, 129, 932, 6, 99, 859, 670, 457, 846, 632, 173, 99, 698], 37],
  [[115, 237, 783, 134, 751, 225, 953, 985, 87, 411, 409, 500, 116, 884, 704, 736, 320, 548, 252, 684, 574, 719, 616, 587, 114, 622, 403, 269, 253, 392, 594, 601], 27],
  [[764, 875, 179, 132, 612, 642, 485, 487, 579, 381, 827, 912, 784, 800, 570, 629, 422, 821, 322, 688, 523, 968, 364, 343, 246, 715, 533, 561, 329, 587, 169, 890, 790, 297, 371, 352, 249, 442, 978], 21],
  [[310, 247, 510, 471, 70, 866, 279, 530, 830, 616, 876, 313, 931, 273, 639, 169, 724, 855, 755, 135, 918, 576, 415, 882, 672, 617, 635, 641, 766, 358, 381, 207, 477, 811, 141, 17, 468, 654, 117, 571, 481, 420, 241, 429, 295, 62, 868, 171, 918, 515, 848], 3],
  [[988, 366, 758, 927, 736, 533, 767, 789, 490, 97, 432, 789, 652, 362, 440, 868, 956, 574, 217, 590, 430, 477, 893, 748, 910, 52, 911, 836, 934, 291, 212, 974, 988, 409, 420, 610, 665, 504, 147, 860, 151, 497, 185, 613, 632, 845, 908, 503, 761, 213, 735, 500, 738, 793, 120, 532, 466, 8, 784, 514, 177, 221, 987, 860, 521, 528, 686, 769, 865, 470, 962, 347, 832, 405, 967, 96, 636, 345, 316, 515, 863, 917, 688, 246, 810, 23], 48],
];

for (let test of tests) {
  logOutList(printRow(rotate(...test)));
}

/*
[1, 3, -1, -3, 5, 3, 6, 7]
3
[1, 2, 3, 4, 5, 6, 7, 8, 9]
1
[1, 2, 3, 4, 5, 6, 7, 8, 9]
2
[1, 2, 3, 4, 5, 6, 7, 8, 9]
3
[1, 2, 3, 4, 5, 6, 7, 8, 9]
4
[1, 2, 3, 4, 5, 6, 7, 8, 9]
5
[1, 2, 3, 4, 5, 6, 7, 8, 9]
6
[1, 2, 3, 4, 5, 6, 7, 8, 9]
7
[1, 2, 3, 4, 5, 6, 7, 8, 9]
8
[1, 2, 3, 4, 5, 6, 7, 8, 9]
9
[1, 2, 3, 4, 5, 6, 7, 8, 9]
10
[1, 2, 3, 4, 5, 6, 7, 8, 9]
11
[1, 2, 3, 4, 5, 6, 7, 8, 9]
12
[1, 2, 3, 4, 5, 6, 7, 8]
1
[1, 2, 3, 4, 5, 6, 7, 8]
2
[1, 2, 3, 4, 5, 6, 7, 8]
3
[1, 2, 3, 4, 5, 6, 7, 8]
4
[1, 2, 3, 4, 5, 6, 7, 8]
5
[1, 2, 3, 4, 5, 6, 7, 8]
6
[1, 2, 3, 4, 5, 6, 7, 8]
7
[1, 2, 3, 4, 5, 6, 7, 8]
8
[1, 2, 3, 4, 5, 6, 7, 8]
9
[1, 2, 3, 4, 5, 6, 7, 8]
10
[1, 2, 3, 4, 5, 6, 7, 8]
11
[1, 2, 3, 4, 5, 6, 7, 8]
12
[1]
1
[1, -1]
1
[9, 11]
2
[847, 170, 900, 999, 710, 748, 676, 173, 856, 55, 995, 208, 796, 205, 976, 502, 646, 474, 210, 956, 646, 459, 202, 152, 771, 282, 433, 699, 48, 635, 391, 615, 694, 363, 223, 720, 638, 308, 95, 135, 186, 663, 309, 390, 349, 416, 384, 271, 280, 522]
15
[307, 418, 334]
3
[96, 605, 367, 506, 597, 560, 929, 376, 938, 878, 177, 337, 806, 197, 707, 997]
5
[358, 518, 456, 838, 30, 262, 348, 14, 909]
3
[432, 496, 516, 827, 987, 939, 732, 931, 840, 173, 964, 463, 772, 991, 526, 45, 68, 600, 566, 709, 998, 281, 742, 330, 517, 539, 892, 851, 802, 784, 636, 207, 602, 244, 343, 955]
10
[15, 621, 772, 322, 937, 36, 599, 590, 310, 218, 745, 386, 923, 328, 918, 687, 597, 432, 698, 22, 537, 936, 199, 689, 821, 477, 899, 62, 937, 557, 672, 378, 143, 856, 450, 47, 142, 237, 874, 391, 120, 322, 385, 36, 328, 633, 763, 314, 890, 129, 932, 6, 99, 859, 670, 457, 846, 632, 173, 99, 698]
37
[115, 237, 783, 134, 751, 225, 953, 985, 87, 411, 409, 500, 116, 884, 704, 736, 320, 548, 252, 684, 574, 719, 616, 587, 114, 622, 403, 269, 253, 392, 594, 601]
27
[764, 875, 179, 132, 612, 642, 485, 487, 579, 381, 827, 912, 784, 800, 570, 629, 422, 821, 322, 688, 523, 968, 364, 343, 246, 715, 533, 561, 329, 587, 169, 890, 790, 297, 371, 352, 249, 442, 978]
21
[310, 247, 510, 471, 70, 866, 279, 530, 830, 616, 876, 313, 931, 273, 639, 169, 724, 855, 755, 135, 918, 576, 415, 882, 672, 617, 635, 641, 766, 358, 381, 207, 477, 811, 141, 17, 468, 654, 117, 571, 481, 420, 241, 429, 295, 62, 868, 171, 918, 515, 848]
3
[988, 366, 758, 927, 736, 533, 767, 789, 490, 97, 432, 789, 652, 362, 440, 868, 956, 574, 217, 590, 430, 477, 893, 748, 910, 52, 911, 836, 934, 291, 212, 974, 988, 409, 420, 610, 665, 504, 147, 860, 151, 497, 185, 613, 632, 845, 908, 503, 761, 213, 735, 500, 738, 793, 120, 532, 466, 8, 784, 514, 177, 221, 987, 860, 521, 528, 686, 769, 865, 470, 962, 347, 832, 405, 967, 96, 636, 345, 316, 515, 863, 917, 688, 246, 810, 23]
48
*/