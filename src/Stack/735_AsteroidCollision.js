/*
We are given an array asteroids of integers representing asteroids in a row.

For each asteroid, the absolute value represents its size, and the sign represents its direction (positive meaning right, negative meaning left). Each asteroid moves at the same speed.

Find out the state of the asteroids after all collisions. If two asteroids meet, the smaller one will explode. If both are the same size, both will explode. Two asteroids moving in the same direction will never meet.

 

Example 1:

Input: asteroids = [5,10,-5]
Output: [5,10]
Explanation: The 10 and -5 collide resulting in 10.  The 5 and 10 never collide.
Example 2:

Input: asteroids = [8,-8]
Output: []
Explanation: The 8 and -8 collide exploding each other.
Example 3:

Input: asteroids = [10,2,-5]
Output: [10]
Explanation: The 2 and -5 collide resulting in -5. The 10 and -5 collide resulting in 10.
Example 4:

Input: asteroids = [-2,-1,1,2]
Output: [-2,-1,1,2]
Explanation: The -2 and -1 are moving left, while the 1 and 2 are moving right. Asteroids moving the same direction never meet, so no asteroids will meet each other.
 

Constraints:

1 <= asteroids <= 104
-1000 <= asteroids[i] <= 1000
asteroids[i] != 0
*/

var asteroidCollision = function (asteroids) {
  const stack = [];

  for (let asteroid of asteroids) {
    if (asteroid > 0) {
      stack.push(asteroid);
    } else {
      while (
        stack[stack.length - 1] > 0
        && stack[stack.length - 1] < Math.abs(asteroid)
      ) stack.pop();

      const last = stack[stack.length - 1];

      if (!stack.length || last < 0) {
        stack.push(asteroid);
      } else if (Math.abs(last) === Math.abs(asteroid)) {
        stack.pop();
      }
    }
  }

  return stack;
};

/*

*/

// const maxLen = 50;
// for (let i = 0; i < 40; i += 1) {
//   const len = Math.floor(Math.random() * maxLen) + 1;

//   const asteroids = new Array(len).fill(0)
//     .map(() => {
//       const magnitude = Math.floor(Math.random() * 50) - 25;
//       return magnitude + (magnitude === 0) * (Math.random() < .5 ? -1 : 1); 
//     });

//   logOutList(printRow(asteroids) + ',');
// }

const tests = [
  [5,10,-5],
  [8,-8],
  [10,2,-5],
  [-2,-1,1,2],
  [5, 8, 11, -20, -20, 12, -23, 24, -24, -4, -10, 7, -2],
  [-6, -4, 8, -3, -22, 8, 9, -18, 11, 7, -14, -11, -11, -23, -20, 1, -23, -5, 18, 1, 1, -21, 22, -25, -20, 1, -15, 10, -24, 1, -14, -18, 1, -7, 7, 13, -25, 18, -25, 20, 10, -4, 18, -25, -25, 11, 9],
  [-8, 5, -7, 1, -3, 20, -17, -16, -11, -6, 5, -14, 6, 16, 18, 5, 16, -6],
  [21, 3, -10, 22, 20, -9, -10, -14, 18, 13, -11, 7, 23, -11, -11, -1, 21, 3],
  [-2, 12, -6, 9, -10, -9, 21, 24, 13, -3, -2, -20, -9, 1, 3, 19, -18, -25, -1, -10],
  [-21, -22, -8, -10, 20, -11, 22, 15, 21, -14, 17, 11, -7, 7, 1, 16, 24, -4, -6, 14, 2, 15, 22, -16, 24, -23, -25, -3, 21, -8, 7, -4, -4, 12, -12, -3, 11, -19, 9, 7],
  [8, 12, 8, 8, -23, -12, -2, 14, 10, 20, -16, 12, 4, 7, -1, 17, 3, 11, 17, -24, 15, 5, -10, -17, 12, -7, -15, 4, 8, -12, 2, -10, -2, -4, -13, 9, 9, 23, -5, -1, 10, -15, 11, 1, -2, 1, -11, -18],
  [20, -24, 7, -22, -6, 1, -1, -25, -4, 7, -25, -21, 23, -8, 14, -21, 9, 21, -24, -10, -14, -11, -7, 9, -14, 1, -5, -12, 11, -1, 6, 23, 24, -14, 4, -16, -1, 22, -10, 17, 23, -17],
  [-17, 9, -2, 13, -11, -13, 6, -13, -24, 1, 17, 22, -13, 13, -5, -11, 7, -23, 3, 6, -5, -15, -8, 10, -4, -13, 22, -10, -10, -24, 23, -22, 21, -19, -23, 23, 21, -25, 18, -19, -10, 2, -19, -6, -25, 13, 3, 1, 5],
  [7, -14, 17, 11, 2, -25, 1, -10, 12, 12, 16, 22, 14, 1, 9, -15, -5, 2, 19, 5, 19, -23, -4, 24, -14, -20, -10, 24, -11, -20, 1, 9, -22, -22, -14, 23],
  [4, 7, 13, 1, -21, -5, -2, 9, -3, 9, -3, 10, 5, 12, 4, 4, 12, -6, 19, 6, -3, 12, -6, 21, -14, 10, 7, 9, 4, -21, 21, -24, -9, 10, 19, -16, 19, -21, -1, -2, -5, 17, -10, -4, -7],
  [12, 13],
  [23, 19, 21, -20, -17, 24, 19, -17, -12, -12, 6, 8, 23, -16, -25, -11, -4, 13, -15, 3, -12, -13],
  [23, 3, 4, -4, 10, -22, 12, -1, 19, -1, -6, 15, 21, -23, -8, -22, -7, -11, 24, 1, 6, -5, 9, -13, -24, -24, -19, 19, -2, 5, 9, 5, 12, -8, -8, 12, 11, 10, 4, 13, -1, -25, -2, -8, -19, 7, 7, -10, 24],
  [15, 22, -3, 5, -2, 23, 19, 13, 14, -18, -2, 15, 18, -21, 21, -9, -9, 3, -1, 24, 3, 20],
  [-17, 15, -16, 18, 8],
  [7, 23, 16, -2, 12, -16, -17, 10, 13, -5, 11, 2, 4, 4, 9, 24, -24, -23, -16, -7, -7, 11, -17, 3, 3, 16, -21, 16, 24, -6, -13, 3, 23, -13, 8, 9, -17, 21, 8, -12],
  [-17, -14, -18, 3, 15, 12, 15, -14, 18, 17, 21, 10],
  [-18, 5, -13, 24],
  [-5, -22, 22, 13, 5, 11, -19, 15, -13, -23, -6, -16, 3, 13, 7, -5, 20, -21, 24, -8, -8, 16, -24, -14, -1, -20, -6, -6, 19, 23, 3, -1, 15, -22, 20, -21, -11, 18, 20, 4, 4],
  [24, -5, -23, 3, -10, 14, 10, -1, -15, -1, 23, -20, 10, -16, 15, -7, -13, 12, -23, 17, -17, 3, 22, 16, -10, -22, -14, 24, 18, -16, -21, -2, 12, -9, -9, -20, -13, 16, 1],
  [1, 20, -21, -2, 8, 18, -10, -11, -23, 8, -12, 6, 19, -19, -21, 7, -1, 1, -17, 11, 11, 24, 4],
  [6, -20, 7, 10, -21, -8, 20, -12, -8, 3, 21, 7, -10, 5, -12, -2, -5, 7, -5, -12, 9, 11, 4, -7, -20, -6, -16, -10, -6, -14, 20, -18, -12, 10, -10],
  [10, -20, 10, 16, -19, -24, 9, 8, 10, 1, 11, -3, -25, -1, -21, 8, 2, 3, 13, -23, -8, -13, 2, 7, 24, 1, -7, -11, -11, 17, -15, 18],
  [-4, -11, 22, 22, 22, 8, -7, -22],
  [4, -25, -18, 1, 19, -21, 1, -7, -9, 16, -18, -14, -20],
  [-25, 16, 24, 24, -6, -18, 23, 14, -25, -8, -7, 4, 13, 20, -14, -10, 13, -8, 11, -11, 6, -13, -3, 3, -24, 20, -2, 21, -15, -22, -5, 9, 1, 13, -5, 21, -8, 12, -22, -24, -25, 21, 5, -19, 5, 15, -19, 5],
  [1, -15, 15, 9, 12, -5, -8, -10],
  [21, -11, -9],
  [9, 16, 14, -18, 4, -22, 4, 16, 19, -25, 22, 19, 20, -25, 16, -20, 10, 3, -22, 10, 12, 8],
  [-15, 15, 4, 12, 11, 17, -3, -17, -3, 8, 5, 7, -17, 15, -8, 3, 18, 16, 6, -13, 11, 24, 24, -4, -18, -6, -4, -4, 12, 9, -15, -13, 21, 14, -4, -14],
  [11, -21, -2, -2, 16, 1, 9, -11, 1, 9, 2, 18, -3, 1, 21, 5, 19, 22, -21, 17, 11, -24, 2, -20, -8, -19, 20, 4, 4, 9, 10, -12, 2, -19, -14, -9, 13, -20, -23, -3],
  [-13, 10, -22, -11, -7, 22, -21, 9, -8, 10, 24, -19, -11, 1, -24, -22, 24, -17, 23, -4, -16, 6, -17, -24, -24, 1, 2, -2, 6, -7, 16, -16, 22, 21, -13, 17],
  [10, -21, 17, -16, -7, 13, -16, 2, -13, -19, 1, 9, -9, -25, 19, 6, -6, -12, -3, 2, -15, -16, -3, 4, -17, 15, 13, 8, 12, 8, 2, -14, 9, 11, -22, -9, 17, 2, -11, 2],
  [-9, 3, 10, 12, 3, 10, 2, -2, 14, -22, -15, 24, -5, -2, 4, -2, 16, -14, -18, -13, -24, -21, -4, -7, 20, -7, -24, 9, -12, 8, 15, -7],
  [5, 9, 5, 21, -25, 1, -21],
  [16, -1, 7, -15, 23, -24, 9, -18, -24, -8, 2, -8, -16, 6, -21, 17, 21, 12, -25, -4, -14, 19, 16, 22, 8, -20, -4, 6, -11, 10, -21, -12, 22],
  [22, -20, 17, 22, 12, 23, 10, 17],
  [-10, 8, -2, -5, 18, -19, 18, 19, -18, 17, 20, 21, -23, 21, 8, -2, -18, 2, 14, 20, -6, 2, 11, -1, -24, -2, -7, 10, 18, -22, -19, 19, 20],
  [17, -9, 8, 7],
];

let i = 0;
for (let test of tests) {
  console.time(i);
  logOutList(printRow(asteroidCollision(test)));
  console.timeEnd(i);
  i += 1;
}

/*
[5,10,-5]
[8,-8]
[10,2,-5]
[-2,-1,1,2]
[5, 8, 11, -20, -20, 12, -23, 24, -24, -4, -10, 7, -2]
[-6, -4, 8, -3, -22, 8, 9, -18, 11, 7, -14, -11, -11, -23, -20, 1, -23, -5, 18, 1, 1, -21, 22, -25, -20, 1, -15, 10, -24, 1, -14, -18, 1, -7, 7, 13, -25, 18, -25, 20, 10, -4, 18, -25, -25, 11, 9]
[-8, 5, -7, 1, -3, 20, -17, -16, -11, -6, 5, -14, 6, 16, 18, 5, 16, -6]
[21, 3, -10, 22, 20, -9, -10, -14, 18, 13, -11, 7, 23, -11, -11, -1, 21, 3]
[-2, 12, -6, 9, -10, -9, 21, 24, 13, -3, -2, -20, -9, 1, 3, 19, -18, -25, -1, -10]
[-21, -22, -8, -10, 20, -11, 22, 15, 21, -14, 17, 11, -7, 7, 1, 16, 24, -4, -6, 14, 2, 15, 22, -16, 24, -23, -25, -3, 21, -8, 7, -4, -4, 12, -12, -3, 11, -19, 9, 7]
[8, 12, 8, 8, -23, -12, -2, 14, 10, 20, -16, 12, 4, 7, -1, 17, 3, 11, 17, -24, 15, 5, -10, -17, 12, -7, -15, 4, 8, -12, 2, -10, -2, -4, -13, 9, 9, 23, -5, -1, 10, -15, 11, 1, -2, 1, -11, -18]
[20, -24, 7, -22, -6, 1, -1, -25, -4, 7, -25, -21, 23, -8, 14, -21, 9, 21, -24, -10, -14, -11, -7, 9, -14, 1, -5, -12, 11, -1, 6, 23, 24, -14, 4, -16, -1, 22, -10, 17, 23, -17]
[-17, 9, -2, 13, -11, -13, 6, -13, -24, 1, 17, 22, -13, 13, -5, -11, 7, -23, 3, 6, -5, -15, -8, 10, -4, -13, 22, -10, -10, -24, 23, -22, 21, -19, -23, 23, 21, -25, 18, -19, -10, 2, -19, -6, -25, 13, 3, 1, 5]
[7, -14, 17, 11, 2, -25, 1, -10, 12, 12, 16, 22, 14, 1, 9, -15, -5, 2, 19, 5, 19, -23, -4, 24, -14, -20, -10, 24, -11, -20, 1, 9, -22, -22, -14, 23]
[4, 7, 13, 1, -21, -5, -2, 9, -3, 9, -3, 10, 5, 12, 4, 4, 12, -6, 19, 6, -3, 12, -6, 21, -14, 10, 7, 9, 4, -21, 21, -24, -9, 10, 19, -16, 19, -21, -1, -2, -5, 17, -10, -4, -7]
[12, 13]
[23, 19, 21, -20, -17, 24, 19, -17, -12, -12, 6, 8, 23, -16, -25, -11, -4, 13, -15, 3, -12, -13]
[23, 3, 4, -4, 10, -22, 12, -1, 19, -1, -6, 15, 21, -23, -8, -22, -7, -11, 24, 1, 6, -5, 9, -13, -24, -24, -19, 19, -2, 5, 9, 5, 12, -8, -8, 12, 11, 10, 4, 13, -1, -25, -2, -8, -19, 7, 7, -10, 24]
[15, 22, -3, 5, -2, 23, 19, 13, 14, -18, -2, 15, 18, -21, 21, -9, -9, 3, -1, 24, 3, 20]
[-17, 15, -16, 18, 8]
[7, 23, 16, -2, 12, -16, -17, 10, 13, -5, 11, 2, 4, 4, 9, 24, -24, -23, -16, -7, -7, 11, -17, 3, 3, 16, -21, 16, 24, -6, -13, 3, 23, -13, 8, 9, -17, 21, 8, -12]
[-17, -14, -18, 3, 15, 12, 15, -14, 18, 17, 21, 10]
[-18, 5, -13, 24]
[-5, -22, 22, 13, 5, 11, -19, 15, -13, -23, -6, -16, 3, 13, 7, -5, 20, -21, 24, -8, -8, 16, -24, -14, -1, -20, -6, -6, 19, 23, 3, -1, 15, -22, 20, -21, -11, 18, 20, 4, 4]
[24, -5, -23, 3, -10, 14, 10, -1, -15, -1, 23, -20, 10, -16, 15, -7, -13, 12, -23, 17, -17, 3, 22, 16, -10, -22, -14, 24, 18, -16, -21, -2, 12, -9, -9, -20, -13, 16, 1]
[1, 20, -21, -2, 8, 18, -10, -11, -23, 8, -12, 6, 19, -19, -21, 7, -1, 1, -17, 11, 11, 24, 4]
[6, -20, 7, 10, -21, -8, 20, -12, -8, 3, 21, 7, -10, 5, -12, -2, -5, 7, -5, -12, 9, 11, 4, -7, -20, -6, -16, -10, -6, -14, 20, -18, -12, 10, -10]
[10, -20, 10, 16, -19, -24, 9, 8, 10, 1, 11, -3, -25, -1, -21, 8, 2, 3, 13, -23, -8, -13, 2, 7, 24, 1, -7, -11, -11, 17, -15, 18]
[-4, -11, 22, 22, 22, 8, -7, -22]
[4, -25, -18, 1, 19, -21, 1, -7, -9, 16, -18, -14, -20]
[-25, 16, 24, 24, -6, -18, 23, 14, -25, -8, -7, 4, 13, 20, -14, -10, 13, -8, 11, -11, 6, -13, -3, 3, -24, 20, -2, 21, -15, -22, -5, 9, 1, 13, -5, 21, -8, 12, -22, -24, -25, 21, 5, -19, 5, 15, -19, 5]
[1, -15, 15, 9, 12, -5, -8, -10]
[21, -11, -9]
[9, 16, 14, -18, 4, -22, 4, 16, 19, -25, 22, 19, 20, -25, 16, -20, 10, 3, -22, 10, 12, 8]
[-15, 15, 4, 12, 11, 17, -3, -17, -3, 8, 5, 7, -17, 15, -8, 3, 18, 16, 6, -13, 11, 24, 24, -4, -18, -6, -4, -4, 12, 9, -15, -13, 21, 14, -4, -14]
[11, -21, -2, -2, 16, 1, 9, -11, 1, 9, 2, 18, -3, 1, 21, 5, 19, 22, -21, 17, 11, -24, 2, -20, -8, -19, 20, 4, 4, 9, 10, -12, 2, -19, -14, -9, 13, -20, -23, -3]
[-13, 10, -22, -11, -7, 22, -21, 9, -8, 10, 24, -19, -11, 1, -24, -22, 24, -17, 23, -4, -16, 6, -17, -24, -24, 1, 2, -2, 6, -7, 16, -16, 22, 21, -13, 17]
[10, -21, 17, -16, -7, 13, -16, 2, -13, -19, 1, 9, -9, -25, 19, 6, -6, -12, -3, 2, -15, -16, -3, 4, -17, 15, 13, 8, 12, 8, 2, -14, 9, 11, -22, -9, 17, 2, -11, 2]
[-9, 3, 10, 12, 3, 10, 2, -2, 14, -22, -15, 24, -5, -2, 4, -2, 16, -14, -18, -13, -24, -21, -4, -7, 20, -7, -24, 9, -12, 8, 15, -7]
[5, 9, 5, 21, -25, 1, -21]
[16, -1, 7, -15, 23, -24, 9, -18, -24, -8, 2, -8, -16, 6, -21, 17, 21, 12, -25, -4, -14, 19, 16, 22, 8, -20, -4, 6, -11, 10, -21, -12, 22]
[22, -20, 17, 22, 12, 23, 10, 17]
[-10, 8, -2, -5, 18, -19, 18, 19, -18, 17, 20, 21, -23, 21, 8, -2, -18, 2, 14, 20, -6, 2, 11, -1, -24, -2, -7, 10, 18, -22, -19, 19, 20]
[17, -9, 8, 7]
*/